<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Add.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABDlJREFUaEPt
        mVuoTGEUx49LblEeEUnEE/ImD0oR5ZKIB6WUkNxfEIryxIs3Ig84kk5EvMi16FCI4skDuXSOOoM5tzku
        xfit3Tq7Pd/37Zlvz94zDZ1//dsze631X9/a6/v2t2dP0wAGMIAB/F/o7e1d2NXVdbm7u7u1p6fneS2I
        9hN4Ba7QtNmCJIcRL9aZZ4rF4mAdQnpIJxxJ6sVzFDNEh5IOiJ03xOvN85kUg9A9Q7jIVLvFetnNcXNK
        HkLvvanv4IXUxSDyICpK8ttqygR9fX2T0CxEc8SwOVUxCJQUQif2qCkzoPs4miOOFHyx6mIQMDuyTU2Z
        wcxRgXIDGKSh/iCw0QoRrtRQfxDUiIU0a6g/CCpJwhrZoabMgO7DaA4P3tdQfxBkXq0LasoEHR0do9H8
        auSoxAca7g8JMkR+M71O0JklsuunITqr0Xtk6Pswk0Iagf9MId9hO3yr7IVRe8MWkmeaXWS6ruPzdHPT
        k32js7NzCj5r8DmJzxU1+YOgmhXCwD7ArbLgNV3tQMJaFPIT7udKD9c0tQcJMy1EupDP5+eofP1A8iwL
        eSNPuypdArozEvtyeJZ18JLjJ/hNjvr9LFyG3wgNSQaCMymEwXwsFAoTVDYEAxuGfR/03RS/orWLuKEq
        4QcC0xTyG7YwndbSiYkqGYLCxmP3eoR3sJVNdZxKVQYB1RbSxpWbqzIWGMQsfGT6uGJ9+Ul0VLI8cK6m
        kB44QyUsUOA07LmIfxrm2GOmqnQ8cKymkL0abkHmNoW8cMRUTabu84prBsekhfzi9jpWwy2QdIsjJill
        7ZnnNmkKN3BIWsgrDbXAVRuOXZ6hXHG+vMm6mM3R1GmTO6CmsoFD0kIea6gFbLJPuGK8SDcvMdjgOYyu
        T+acPFCGdqbs0iCRCzgkKkR2bg21gP206Z+AN6WjKhVAFjnn8/0+FHJKTTZwSLzYaf1MDS+BLEqXP+cL
        cBWfW02bUoqwpg0x8oIv6vdMTTYwJi4EXtfwEnD+s+En7ILzxN7e3j6Kq3o3amew4XSKAtvxqJ+yTc02
        MFZTiLR5u0qE4Lw89YY+2on5ag6Qy+XGYOv/+XsjphMH+zUM/lAXGxirKgTmVCIE58w7zR9o3TalGC7E
        0YRFCMt2xHqJ7ck/DGSkygTg3DPDJ/Bj0DvVpSzwdU2nKJ+qqw2Maf5WmK4yAfged9eSDa7shlahEwHL
        3rUQWOAK8iHC61UmAN8Xu/yUsZ3BVqkTAbkdL9IQN0hwxBXowRaVCMBUq7SzW53h+4GIvRzL7+z9YG+Q
        v+DOUNQdX+J/FfGSN+ec26iJ4xh2hs/HDFs5bggS1AsU5vP0K525ZpyLJdO/8tNvLUB3x5H8g2tQVfC9
        6Kl0/UHy+v5CrCXq+pu91pCbAdNsDQN7Zww0juK3XMMbDxQUvteCr+EXKAOX4yvo8V6rqekv9LCQ98+n
        w8AAAAAASUVORK5CYII=
</value>
  </data>
</root>